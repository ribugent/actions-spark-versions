name: Mirroring release
run-name: Mirroring release ${{ inputs.version }}
concurrency:
  group: mirror-release-${{ inputs.version }}

on:
  workflow_dispatch:
    inputs:
      version:
        type: string
        required: true

permissions:
  contents: write

jobs:
  mirror:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          persist-credentials: true
          fetch-depth: 0

      - name: Setup user
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

      - name: Create tag
        id: tag
        run: |
          git checkout --orphan spark-${{ github.event.inputs.version }}
          git rm -rf .
          git commit --allow-empty -m "Spark release ${{ github.event.inputs.version }}"
          git push origin spark-${{ github.event.inputs.version }}
          echo commit=$(git rev-parse HEAD) >> $GITHUB_OUTPUT

      - name: Download release files
        run: |
          wget -e robots=off  -r -l 0 -np -nd -A "spark-*-bin-*" https://dlcdn.apache.org/spark/spark-${{ github.event.inputs.version }}/ || \
            wget -e robots=off  -r -l 0 -np -nd -A "spark-*-bin-*" https://archive.apache.org/dist/spark/spark-${{ github.event.inputs.version }}/

      - name: Create release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ github.event.inputs.version }}
          target_commitish: ${{ steps.tag.outputs.commit }}
          files: spark-*-bin-*
          name: Spark ${{ github.event.inputs.version }}
          fail_on_unmatched_files: true

      - name: Cleanup branch
        if: always()
        run: |
          git push origin --delete spark-${{ github.event.inputs.version }} || '0'

      - name: Cleanup tag on failure
        if: failure()
        run: |
          git fetch --tags
          git push origin --delete v${{ github.event.inputs.version }} || '0'
